version: "3.3"
services:

  # Traefik Service
  proxy:
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-traefik
    image: traefik:v2.2
    ports:
      - "80:80"
      - "443:443"
      - "8090:8080"
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker=true
      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable the Dashboard and API
      - --api
      # Enable the Dashboard and API in insecure mode for local development
      - --api.insecure=true
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=apps@interlink-project.eu
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    networks:
      - traefik-public
      - default

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - traefik-public
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-portainer-http.rule=PathPrefix(`/portainer`)
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-portainer.loadbalancer.server.port=9000
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-portainer-http.middlewares=portainer-stripprefix
      - traefik.http.middlewares.portainer-stripprefix.stripprefix.prefixes=/portainer
      
  # Frontend Service
  frontend:
    image: "interlinkproject/frontend:latest"
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-frontend
    environment:
      - REACT_APP_COMPLETE_DOMAIN=https://${DOMAIN}
      - NODE_ENV=production
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-frontend.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-frontend.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-frontend.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-frontend.rule=Host(`${DOMAIN}`) && PathPrefix(`/`)
    networks:
      - traefik-public

  # Redis Service
  redis:
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-redis
    image: redis:6-alpine
    networks:
      - default

  # Postgres Service
  db:
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-db
    image: interlinkproject/postgres:latest
    volumes:
      - db-data:${PGDATA}
    env_file:
      - ./.env
    environment:
      - POSTGRES_MULTIPLE_DATABASES=loomio_production
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default
  db2:
    # we do not want persistence for this databases YET (no volumes, whereas db has volumes)
    # TODO: delete this microservice and replace POSTGRES_SERVER=db2 by POSTGRES_SERVER=db (in this docker-compose catalogue and coproduction micros)
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-db2
    image: interlinkproject/postgres:latest
    env_file:
      - ./.env
    environment:
      - POSTGRES_MULTIPLE_DATABASES=coproduction,catalogue
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default

  # PGAdmin (do not expose)
  pgadmin:
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-pgadmin
    image: dpage/pgadmin4:latest
    ports:
      - "5050:5050"
    depends_on:
      - db
    env_file:
      - ./.env
    networks:
      - default

  # MongoDB Service
  mongodb:
    image: bitnami/mongodb:latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-mongodb
    env_file:
      - ./.env
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin -u $MONGODB_ROOT_USER -p $MONGODB_ROOT_PASSWORD --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - default

  # Coproduction Service
  coproduction:
    image: interlinkproject/backend-coproduction:latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-coproduction
    env_file:
      - ./.env
    environment:
      - PROTOCOL=https://
      - SERVER_NAME=${DOMAIN?Variable not set}
      - PORT=${PORT}
      - BASE_PATH=/coproduction
      - POSTGRES_DB=coproduction
      - POSTGRES_SERVER=db2 # TODO: remove this
    depends_on:
      db:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-coproduction.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-coproduction.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-coproduction.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-coproduction.rule=Host(`${DOMAIN}`) && PathPrefix(`/coproduction`)
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-coproduction.middlewares=coproduction-stripprefix
      - traefik.http.middlewares.coproduction-stripprefix.stripprefix.prefixes=/coproduction
    networks:
      - traefik-public
      - default

  # Coproduction Worker Service
  coproductionworker:
    image: interlinkproject/backend-coproduction:latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-coproductionworker
    command: [ "bash", "./worker-start.sh" ]
    depends_on:
      - db
      - redis
    env_file:
      - ./.env
    environment:
      - PROTOCOL=https://
      - SERVER_NAME=${DOMAIN?Variable not set}
      - PORT=${PORT}
      - BASE_PATH=/coproduction
      - POSTGRES_DB=coproduction
      - POSTGRES_SERVER=db2 # TODO: remove this
    networks:
      - default

  # Catalogue Service
  catalogue:
    image: interlinkproject/backend-catalogue:latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-catalogue
    environment:
      - PROTOCOL=https://
      - SERVER_NAME=${DOMAIN?Variable not set}
      - PORT=${PORT}
      - BASE_PATH=/catalogue
      - POSTGRES_DB=catalogue
      - POSTGRES_SERVER=db2 # TODO: remove this
    env_file:
      - ./.env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-catalogue.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-catalogue.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-catalogue.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-catalogue.rule=Host(`${DOMAIN}`) && PathPrefix(`/catalogue`)
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-catalogue.middlewares=catalogue-stripprefix
      - traefik.http.middlewares.catalogue-stripprefix.stripprefix.prefixes=/catalogue
    networks:
      - traefik-public
      - default

  # Auth Service
  auth:
    image: interlinkproject/backend-auth:latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-auth
    environment:
      - PROTOCOL=https://
      - SERVER_NAME=${DOMAIN?Variable not set}
      - PORT=${PORT}
      - BASE_PATH=/auth
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - COLLECTION_NAME=users
      - CLIENT_SECRET=${DEV_LOOMIO_AAC_APP_SECRET}
    env_file:
      - ./.env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-auth.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-auth.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-auth.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-auth.rule=Host(`${DOMAIN}`) && PathPrefix(`/auth`)
    networks:
      - traefik-public
      - default

  # # Channels Service (Websocket)
  # channels:
  #   image: interlinkproject/backend-channels:latest
  #   container_name: ${PLATFORM_STACK_NAME?Variable not set}-channels
  #   environment:
  #     - SERVER_NAME=${DOMAIN?Variable not set}
  #     - SERVER_HOST=https://${DOMAIN?Variable not set}/channels
  #     - PORT=${PORT}
  #     - BASE_PATH=/channels
  #     - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
  #     - COLLECTION_NAME=channels_assets
  #   env_file:
  #     - ./.env
  #   labels:
  #     - traefik.enable=true
  #     - traefik.docker.network=traefik-public
  #     - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-channels.loadbalancer.server.port=${PORT}
  #     - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-channels.tls.certresolver=letsencrypt
  #     - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-channels.tls=true
  #     - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-channels.rule=Host(`${DOMAIN}`) && PathPrefix(`/channels`)
  #     - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-channels.middlewares=channels-stripprefix
  #     - traefik.http.middlewares.channels-stripprefix.stripprefix.prefixes=/channels
  #   networks:
  #     - traefik-public
  #     - default

  # Googledrive Interlinker
  googledrive:
    image: interlinkproject/interlinker-googledrive:latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-googledrive
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - PORT=${PORT}
      - BASE_PATH=/googledrive
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - COLLECTION_NAME=googledrive_assets
    env_file:
      - ./.env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-googledrive.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-googledrive.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-googledrive.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-googledrive.rule=Host(`${DOMAIN}`) && PathPrefix(`/googledrive`)
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-googledrive.middlewares=googledrive-stripprefix
      - traefik.http.middlewares.googledrive-stripprefix.stripprefix.prefixes=/googledrive
    networks:
      - traefik-public
      - default

  # Survey Interlinker
  survey:
    image: interlinkproject/interlinker-survey:latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-survey
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - PORT=${PORT}
      - BASE_PATH=/survey
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - COLLECTION_NAME=survey_assets
    env_file:
      - ./.env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-survey.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-survey.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-survey.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-survey.rule=Host(`${DOMAIN}`) && PathPrefix(`/survey`)
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-survey.middlewares=survey-stripprefix
      - traefik.http.middlewares.survey-stripprefix.stripprefix.prefixes=/survey
    networks:
      - traefik-public
      - default

  # Ceditor Interlinker Service
  ceditor:
    image: interlinkproject/interlinker-ceditor:ceditor-latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-ceditor
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - PORT=${PORT}
      - BASE_PATH=/ceditor
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - COLLECTION_NAME=etherpad_assets
    env_file:
      - ./.env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-ceditor.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-ceditor.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-ceditor.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-ceditor.rule=Host(`${DOMAIN}`) && PathPrefix(`/ceditor`)
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-ceditor.middlewares=ceditor-stripprefix
      - traefik.http.middlewares.ceditor-stripprefix.stripprefix.prefixes=/ceditor
    networks:
      - traefik-public
      - default

  # Ceditor Interlinker Service etherpad
  etherpad:
    image: interlinkproject/interlinker-ceditor:etherpad-latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-etherpad
    environment:
      - TITLE=${ETHERPAD_TITLE}
      - PORT=${ETHERPAD_PORT}
      - ETHERPAD_API_KEY=${ETHERPAD_API_KEY}
      - DEFAULT_PAD_TEXT=${ETHERPAD_DEFAULT_PAD_TEXT}
      - ADMIN_PASSWORD=${ETHERPAD_ADMIN_PASSWORD}
      - ADMIN_USER=${ETHERPAD_ADMIN_USER}
      - REQUIRE_SESSION=${ETHERPAD_REQUIRE_SESSION}
      - EDIT_ONLY=${ETHERPAD_EDIT_ONLY}
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - COLLECTION_NAME=etherpad_assets
    env_file:
      - ./.env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-etherpad.loadbalancer.server.port=${ETHERPAD_PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-etherpad.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-etherpad.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-etherpad.rule=Host(`${DOMAIN}`) && PathPrefix(`/etherpad`)
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-etherpad.middlewares=etherpad-stripprefix
      - traefik.http.middlewares.etherpad-stripprefix.stripprefix.prefixes=/etherpad
    networks:
      - traefik-public
      - default
    depends_on:
      db:
        condition: service_healthy

  externalresourcemanager:
    image: interlinkproject/interlinker-externalresourcemanager:latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-externalresourcemanager
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - PORT=${PORT}
      - BASE_PATH=/externalresourcemanager
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - COLLECTION_NAME=externalresourcemanager_assets
    env_file:
      - ./.env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-externalresourcemanager.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-externalresourcemanager.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-externalresourcemanager.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-externalresourcemanager.rule=Host(`${DOMAIN}`) && PathPrefix(`/externalresourcemanager`)
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-externalresourcemanager.middlewares=externalresourcemanager-stripprefix
      - traefik.http.middlewares.externalresourcemanager-stripprefix.stripprefix.prefixes=/externalresourcemanager
    networks:
      - traefik-public
      - default

  loomio:
    image: interlinkproject/interlinker-loomio:latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-loomio
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_SERVER}/${LOOMIO_POSTGRES_DB}
      - REDIS_URL=redis://redis:6379
      - AAC_APP_SECRET=${DEV_LOOMIO_AAC_APP_SECRET}
      - SECRET_COOKIE_TOKEN=${DEV_LOOMIO_SECRET_COOKIE_TOKEN}
      - SMTP_USERNAME=${DEV_LOOMIO_SMTP_USERNAME}
      - SMTP_PASSWORD=${DEV_LOOMIO_SMTP_PASSWORD}

    volumes:
      - ./loomio/uploads:/loomio/public/system
      - ./loomio/storage:/loomio/storage
      - ./loomio/files:/loomio/public/files
      - ./loomio/plugins:/loomio/plugins/docker
      - ./loomio/import:/import
      - ./loomio/tmp:/loomio/tmp
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-loomio.loadbalancer.server.port=${PORT}
      # - traefik.http.middlewares.testHeader.headers.customrequestheaders.contentSecurityPolicy=frame-ancestors 'self' *.${MAIN_DOMAIN};
      - traefik.loomio.headers.frameDeny=true
      # - traefik.loomio.headers.customFrameOptionsValue=ALLOW-FROM ${PROTOCOL}${DOMAIN}
      - traefik.loomio.headers.customFrameOptionsValue=ALLOW-FROM https://${DOMAIN}
      # - traefik.loomio.passHostHeader=true
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-loomio.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-loomio.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-loomio.rule=Host(`loomio.${DOMAIN}`)
    networks:
      - traefik-public
      - default

  loomioworker:
    image: interlinkproject/interlinker-loomio:latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-loomioworker
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_SERVER}/${LOOMIO_POSTGRES_DB}
      - REDIS_URL=redis://redis:6379
      - TASK=worker
      - AAC_APP_SECRET=${DEV_LOOMIO_AAC_APP_SECRET}
      - SECRET_COOKIE_TOKEN=${DEV_LOOMIO_SECRET_COOKIE_TOKEN}
      - SMTP_USERNAME=${DEV_LOOMIO_SMTP_USERNAME}
      - SMTP_PASSWORD=${DEV_LOOMIO_SMTP_PASSWORD}
    volumes:
      - ./loomio/uploads:/loomio/public/system
      - ./loomio/storage:/loomio/storage
      - ./loomio/files:/loomio/public/files
      - ./loomio/plugins:/loomio/plugins/docker
      - ./loomio/tmp:/loomio/tmp
    env_file:
      - ./.env
    networks:
      - traefik-public
      - default

  loomiochannels:
    image: loomio/loomio_channel_server:latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-loomiochannels
    environment:
      - REDIS_URL=redis://redis:6379
      - VIRTUAL_HOST=channels.loomio.${DOMAIN?Variable not set}
      - SITE_NAME=channels.loomio.${DOMAIN?Variable not set}
      - LETSENCRYPT_HOST=channels.loomio.${DOMAIN?Variable not set}
      - LETSENCRYPT_EMAIL=apps@interlink-project.eu
    env_file:
      - ./.env
    depends_on:
      - redis
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-loomiochannels.loadbalancer.server.port=5000
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-loomiochannels.tls.certresolver=letsencrypt
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-loomiochannels.tls=true
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-loomiochannels.rule=Host(`channels.loomio.${DOMAIN}`)
    networks:
      - traefik-public
      - default

networks:
  traefik-public:
    external: true
  default:
    name: ${PLATFORM_STACK_NAME?Variable not set}-default
  
volumes:
  db-data: